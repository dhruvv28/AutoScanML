import React, { useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import logo from './swajyot.jpeg';
import {
  PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, LineChart, Line, ScatterChart, Scatter, ZAxis
} from 'recharts';
import trendsData from './trends.json';

const COLORS = ['#ef4444', '#f97316', '#facc15', '#60a5fa', '#64748b'];

const bubbleData = [
    { x: 10, y: 30, z: 200, name: 'Vercel', fill: '#ff6666' },
    { x: 20, y: 50, z: 400, name: 'Cisco', fill: '#66b3ff' },
    { x: 30, y: 120, z: 250, name: 'Ivanti', fill: '#ffcc66' },
    { x: 40, y: 65, z: 300, name: 'Microsoft', fill: '#ff9966' },
    { x: 50, y: 80, z: 500, name: 'SAP', fill: '#66ff99' },
    { x: 60, y: 40, z: 200, name: 'Espressif', fill: '#9966ff' },
    { x: 70, y: 75, z: 450, name: 'Fortinet', fill: '#ff66cc' },
    { x: 80, y: 90, z: 350, name: 'Apple', fill: '#66ccff' },
    { x: 90, y: 110, z: 600, name: 'Google', fill: '#ff99cc' },
    { x: 100, y: 45, z: 150, name: 'Palo Alto Networks', fill: '#99ff66' },
    { x: 110, y: 95, z: 300, name: 'AxiOS', fill: '#cc66ff' },
    { x: 120, y: 60, z: 220, name: 'Erlang', fill: '#66ffcc' },
    { x: 130, y: 85, z: 550, name: 'React Router', fill: '#ffcc99' },
    { x: 140, y: 105, z: 320, name: 'Brocade', fill: '#99ccff' },
    { x: 150, y: 55, z: 180, name: 'SourceCodester', fill: '#ff9999' },
    { x: 160, y: 70, z: 400, name: '7-zip', fill: '#ccff66' },
    { x: 170, y: 90, z: 280, name: 'Netscaler', fill: '#6699ff' },
    { x: 180, y: 115, z: 500, name: 'Gladinet', fill: '#ff6699' },
    { x: 190, y: 50, z: 220, name: 'Notepad-plus-plus', fill: '#99ffcc' },
    { x: 200, y: 80, z: 380, name: 'WordPress', fill: '#cc99ff' },
    { x: 15, y: 40, z: 300, name: 'Apache', fill: '#ffb366' },
    { x: 25, y: 60, z: 200, name: 'Crushftp', fill: '#66ffb3' },
    { x: 35, y: 100, z: 450, name: 'Kubernetes', fill: '#ff66b3' },
    { x: 45, y: 75, z: 350, name: 'Commvault', fill: '#b366ff' },
    { x: 55, y: 90, z: 250, name: 'Tj-actions', fill: '#66b3ff' },
    { x: 65, y: 50, z: 500, name: 'Qualitia Co., Ltd.', fill: '#ffb3b3' },
    { x: 75, y: 85, z: 180, name: 'Roundcube', fill: '#b3ff66' },
    { x: 85, y: 105, z: 320, name: 'Linux', fill: '#ff6666' },
    { x: 95, y: 65, z: 600, name: 'Canonical', fill: '#66b3ff' },
    { x: 105, y: 35, z: 280, name: 'PostgreSQL', fill: '#ffcc66' }
];

const trending = [
    { cve: 'CVE-2025-29927', title: 'Authorization Bypass in Next.js Framework by Ve...', vendor: 'Vercel', product: 'Next.js', score: 9.1, severity: 'CRITICAL' },
    { cve: 'CVE-2025-20188', title: 'Remote File Upload Vulnerability in Cisco IOS X...', vendor: 'Cisco', product: 'Cisco IOS Xe Software', score: 10, severity: 'CRITICAL' },
    { cve: 'CVE-2025-0282', title: 'Stack-Based Buffer Overflow in Ivanti Connect S...', vendor: 'Ivanti', product: 'Connect Secure', score: 9, severity: 'CRITICAL' },
    { cve: 'CVE-2025-33073', title: 'Improper Access Control in Windows SMB Affects ...', vendor: 'Microsoft', product: 'Windows 10 Version 1809', score: 8.8, severity: 'HIGH' },
    { cve: 'CVE-2025-31324', title: 'Unauthorized Metadata Upload Vulnerability in S...', vendor: 'SAP', product: 'SAP Netweaver (visual...', score: 9.8, severity: 'CRITICAL' },
    { cve: 'CVE-2025-27840', title: 'Undocumented Hidden Commands in Espressif ESP32...', vendor: 'Espressif', product: 'Esp32', score: 6.8, severity: 'MEDIUM' },
    { cve: 'CVE-2024-55591', title: 'Remote Attackers Can Gain Super-Admin Privilege', vendor: 'Fortinet', product: 'FortiOS', score: 9.8, severity: 'CRITICAL' },
    { cve: 'CVE-2025-1727', title: 'Remote Linking Vulnerability in End-of-Train an...', vendor: 'End-of-train And ...', product: 'End-of-train And Head-...', score: 7, severity: 'HIGH' },
    { cve: 'CVE-2025-24200', title: 'Authorization Issue in iPadOS and iOS by Apple', vendor: 'Apple', product: 'iPad OS', score: 6.1, severity: 'MEDIUM' },
    { cve: 'CVE-2025-5419', title: 'Out of Bounds Read and Write Vulnerability in G...', vendor: 'Google', product: 'Chrome', score: 8.8, severity: 'HIGH' },
];

export default function VulnerabilityTrends() {
  const navigate = useNavigate();
  const mainRef = useRef();

  const { stats } = trendsData;

  const handleBack = () => {
    if (mainRef.current) {
      mainRef.current.classList.remove('animate-slideFadeIn');
      mainRef.current.classList.add('animate-slideFadeOut');
      setTimeout(() => navigate('/dashboard'), 700);
    } else {
      navigate('/dashboard');
    }
  };

  const severityPieData = [
    { name: 'Critical', value: stats.vulnerabilities_critical_y2d },
    { name: 'High', value: stats.vulnerabilities_high_y2d },
    { name: 'Medium', value: stats.vulnerabilities_medium_y2d },
    { name: 'Low', value: stats.vulnerabilities_low_y2d },
    { name: 'Unrated', value: stats.vulnerabilities_severity_unknown_y2d },
  ];

  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  const severityByMonth = monthNames.map((month, index) => {
    const monthData = { month };
    stats.vulnerabilities_chart_y2d.forEach(severity => {
      const severityName = severity.name;
      const key = severityName.charAt(0).toUpperCase() + severityName.slice(1).toLowerCase();
      monthData[key] = severity.data[index];
    });
    return monthData;
  });

  const totalVulnerabilitiesByYear = stats.vulnerabilities_all_yoy.map(item => ({
    year: item.year,
    total: item.count
  }));

  const yoyIncrease = Math.round(stats.vulnerabilities_y2d_change_yoy * 100);

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-[#1a1f29] flex flex-col dark:text-white">
      {/* Top bar */}
      <div className="flex items-center justify-between px-8 py-6 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow dark:text-white">
        <div className="flex items-center gap-3 bg-gradient-to-r from-white to-blue-50 dark:from-white/90 dark:to-blue-100/80 ring-1 ring-blue-200 dark:ring-blue-400/30 shadow-lg px-6 py-2 rounded-2xl">
          <img src={logo} alt="Swajyot Logo" className="h-8 w-8" />
          <div className="border-l border-blue-200 mx-3 h-8"></div>
          <span className="text-xl font-extrabold font-sans tracking-wide text-blue-700">Swajyot AutoScanML</span>
        </div>
        <button
          onClick={handleBack}
          className="bg-blue-600 text-white px-4 py-2 rounded shadow hover:bg-blue-700 transition"
        >
          Back to Dashboard
        </button>
      </div>
      {/* Main content */}
      <main ref={mainRef} className="flex-1 p-6 max-w-6xl mx-auto w-full dark:text-white animate-slideFadeIn">
        {/* Date display above headline stats */}
        <div className="mb-2 text-right text-gray-500 dark:text-gray-300 text-sm">
          {`As of ${new Date(stats.timestamp).toLocaleDateString()}`}
        </div>
        {/* Headline stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <span className="text-3xl font-bold text-blue-700 dark:text-white">{stats.vulnerabilities_all_y2d.toLocaleString()}</span>
            <span className="text-gray-500 dark:text-white mt-2 text-sm">Vulnerabilities published in {stats.timestamp_year} (as of {new Date(stats.timestamp).toLocaleDateString()})</span>
          </div>
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <span className="text-3xl font-bold text-orange-500 dark:text-white">{stats.vulnerabilities_average_daily}</span>
            <span className="text-gray-500 dark:text-white mt-2 text-sm">Avg. new vulnerabilities each day!</span>
          </div>
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <span className="text-3xl font-bold text-green-600 dark:text-white">{yoyIncrease}%</span>
            <span className="text-gray-500 dark:text-white mt-2 text-sm">Increase in vulnerabilities YoY</span>
          </div>
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <span className="text-3xl font-bold text-red-600 dark:text-white">{stats.vulnerabilities_critical_y2d}</span>
            <span className="text-gray-500 dark:text-white mt-2 text-sm">Critical vulnerabilities</span>
          </div>
        </div>
        {/* Charts Row */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          {/* Pie Chart: Severity Breakdown */}
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <h3 className="font-semibold mb-2 text-gray-900 dark:text-white">Severity Breakdown ({stats.timestamp_year})</h3>
            <ResponsiveContainer width="100%" height={220}>
              <PieChart>
                <Pie
                  data={severityPieData}
                  dataKey="value"
                  nameKey="name"
                  cx="50%"
                  cy="50%"
                  outerRadius={80}
                  label
                >
                  {severityPieData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Legend />
              </PieChart>
            </ResponsiveContainer>
          </div>
          {/* Bar Chart: Severity by Month */}
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <h3 className="font-semibold mb-2 text-gray-900 dark:text-white">Severity by Month ({stats.timestamp_year})</h3>
            <ResponsiveContainer width="100%" height={220}>
              <BarChart data={severityByMonth}>
                <XAxis dataKey="month" fontSize={12} stroke="currentColor" />
                <YAxis fontSize={12} stroke="currentColor" />
                <Tooltip
                  cursor={{ fill: 'rgba(200, 200, 200, 0.1)' }}
                  contentStyle={{
                    backgroundColor: 'rgba(26, 31, 41, 0.9)',
                    borderColor: 'rgba(255, 255, 255, 0.2)',
                    color: 'white',
                  }}
                />
                <Legend wrapperStyle={{ fontSize: '12px' }} />
                <Bar dataKey="Critical" fill={COLORS[0]} name="Critical" />
                <Bar dataKey="High" fill={COLORS[1]} name="High" />
                <Bar dataKey="Medium" fill={COLORS[2]} name="Medium" />
                <Bar dataKey="Low" fill={COLORS[3]} name="Low" />
                <Bar dataKey="Unrated" fill={COLORS[4]} name="Unrated" />
              </BarChart>
            </ResponsiveContainer>
          </div>
          {/* Line Chart: Total Vulnerabilities by Year */}
          <div className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 flex flex-col items-center dark:text-white">
            <h3 className="font-semibold mb-2 text-gray-900 dark:text-white">Total Vulnerabilities by Year</h3>
            <ResponsiveContainer width="100%" height={220}>
              <LineChart data={totalVulnerabilitiesByYear}>
                <XAxis dataKey="year" fontSize={12} stroke="currentColor" />
                <YAxis fontSize={12} stroke="currentColor" />
                <Tooltip
                  cursor={{ fill: 'rgba(200, 200, 200, 0.1)' }}
                  contentStyle={{
                    backgroundColor: 'rgba(26, 31, 41, 0.9)',
                    borderColor: 'rgba(255, 255, 255, 0.2)',
                    color: 'white',
                  }}
                />
                <Legend wrapperStyle={{ fontSize: '12px' }} />
                <Line type="monotone" dataKey="total" stroke={COLORS[0]} name="Total" />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Pareto Principle */}
        <div className="bg-blue-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-6 mb-8">
          <h2 className="text-lg font-bold mb-2 text-gray-900 dark:text-gray-100">Pareto Principle — The 80/20 Rule</h2>
          <p className="text-gray-700 dark:text-gray-300 mb-2">The Pareto principle states that for many outcomes, roughly 80% of consequences come from 20% of causes. In vulnerability management, only a small amount of CVEs introduce the majority of risk. Tracking CVEs that generate vibrant conversation gives us a tool to reliably identify the most important vulnerabilities.</p>
        </div>

        {/* Vulnerabilities Trending Chart */}
        <div className="mb-8">
            <h2 className="text-2xl font-bold text-center mb-6">Vulnerabilities Trending in 2025</h2>
            <p className="text-center text-gray-600 dark:text-gray-400 mb-6">
              This chart shows the trending vulnerabilities over time. The x-axis represents the day of the year, the y-axis represents the number of vulnerabilities, and the size of the bubble represents the volume of conversation around a vulnerability.
            </p>
            <ResponsiveContainer width="100%" height={400}>
            <ScatterChart
                margin={{
                top: 20,
                right: 20,
                bottom: 20,
                left: 20,
                }}
            >
                <XAxis type="number" dataKey="x" name="day" unit="" />
                <YAxis type="number" dataKey="y" name="vulnerabilities" unit="" />
                <ZAxis type="number" dataKey="z" range={[100, 1000]} name="conversations" unit="" />
                <Tooltip cursor={{ strokeDasharray: '3 3' }} />
                <Legend />
                <Scatter name="Vendors" data={bubbleData} fill="#8884d8">
                {bubbleData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.fill} />
                ))}
                </Scatter>
            </ScatterChart>
            </ResponsiveContainer>
            <div className="flex flex-wrap justify-center mt-4">
            {bubbleData.map((entry, index) => (
                <div key={`legend-${index}`} className="flex items-center mr-4 mb-2">
                <div className="w-4 h-4 rounded-full mr-2" style={{ backgroundColor: entry.fill }}></div>
                <span>{entry.name}</span>
                </div>
            ))}
            </div>
        </div>

        {/* Top 10 Trending Vulnerabilities */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-center mb-6">Top 10 Trending Vulnerabilities for 2025</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {trending.map((vuln, index) => (
              <a 
                key={index} 
                href={`https://nvd.nist.gov/vuln/detail/${vuln.cve}`} 
                target="_blank" 
                rel="noopener noreferrer" 
                className="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-4 block hover:bg-gray-50 dark:hover:bg-gray-700"
              >
                <h3 className="font-bold text-md mb-2">{vuln.title}</h3>
                <div className="flex items-center justify-between text-sm">
                  <span className="font-mono text-blue-600 dark:text-blue-400">{vuln.cve}</span>
                  <div>
                    <span className="font-semibold">{vuln.vendor}</span>
                    <span className="mx-2">|</span>
                    <span>{vuln.product}</span>
                  </div>
                  <div className="flex items-center">
                    <span className={`font-bold px-2 py-1 rounded text-xs ${
                      vuln.severity === 'CRITICAL' ? 'bg-red-500 text-white' :
                      vuln.severity === 'HIGH' ? 'bg-orange-500 text-white' :
                      vuln.severity === 'MEDIUM' ? 'bg-yellow-500 text-black' :
                      'bg-gray-500 text-white'
                    }`}>{vuln.score}</span>
                    <span className={`font-bold ml-2 text-xs ${
                      vuln.severity === 'CRITICAL' ? 'text-red-500' :
                      vuln.severity === 'HIGH' ? 'text-orange-500' :
                      vuln.severity === 'MEDIUM' ? 'text-yellow-500' :
                      'text-gray-500'
                    }`}>{vuln.severity}</span>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
        
        {/* Footer */}
        <footer className="text-center text-xs text-gray-400 py-4">
          Data inspired by <a href="https://securityvulnerability.io/stats" className="underline" target="_blank" rel="noopener noreferrer">securityvulnerability.io</a> | Copyright © 2025 Swajyot.
        </footer>
      </main>
    </div>
  );
} 